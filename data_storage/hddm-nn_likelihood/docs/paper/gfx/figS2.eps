%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.20.5 (http://poppler.freedesktop.org)
%%Creator: matplotlib 1.2.1, http://matplotlib.sf.net
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 432 288
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  2 array astore
  /setpagedevice where {
    pop 2 dict begin
      /PageSize exch def
      /ImagingBBox null def
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font T3_14_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-184 -236 1288 929] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 19 dict def
CharProcs begin
/c {
550 0 55 -13 488 560 setcachedevice
q
488 526 m
488 442 l
462 456 437 466 411 473 c
385 480 360 484 334 484 c
276 484 230 465 198 428 c
166 391 150 339 150 273 c
150 206 166 154 198 117 c
230 80 276 62 334 62 c
360 62 385 65 411 72 c
437 79 462 90 488 104 c
488 21 l
462 9 436 0 410 -5 c
383 -10 354 -13 324 -13 c
242 -13 176 12 128 64 c
79 115 55 185 55 273 c
55 362 79 432 128 483 c
177 534 244 560 330 560 c
358 560 385 557 411 551 c
437 545 463 537 488 526 c
f
Q
} def
/b {
635 0 91 -13 580 760 setcachedevice
q
487 273 m
487 339 473 390 446 428 c
418 466 381 485 334 485 c
286 485 249 466 222 428 c
194 390 181 339 181 273 c
181 207 194 155 222 117 c
249 79 286 61 334 61 c
381 61 418 79 446 117 c
473 155 487 207 487 273 c
181 464 m
199 496 223 520 252 536 c
281 552 316 560 356 560 c
422 560 476 533 518 481 c
559 428 580 359 580 273 c
580 187 559 117 518 65 c
476 13 422 -13 356 -13 c
316 -13 281 -5 252 10 c
223 25 199 49 181 82 c
181 0 l
91 0 l
91 760 l
181 760 l
181 464 l
f
Q
} def
/d {
635 0 55 -13 544 760 setcachedevice
q
454 464 m
454 760 l
544 760 l
544 0 l
454 0 l
454 82 l
435 49 411 25 382 10 c
353 -5 319 -13 279 -13 c
213 -13 159 13 117 65 c
75 117 55 187 55 273 c
55 359 75 428 117 481 c
159 533 213 560 279 560 c
319 560 353 552 382 536 c
411 520 435 496 454 464 c
148 273 m
148 207 161 155 188 117 c
215 79 253 61 301 61 c
348 61 385 79 413 117 c
440 155 454 207 454 273 c
454 339 440 390 413 428 c
385 466 348 485 301 485 c
253 485 215 466 188 428 c
161 390 148 339 148 273 c
f
Q
} def
/space {
318 0 0 0 0 0 setcachedevice
q
Q
} def
/i {
278 0 94 0 184 760 setcachedevice
q
94 547 m
184 547 l
184 0 l
94 0 l
94 547 l
94 760 m
184 760 l
184 646 l
94 646 l
94 760 l
f
Q
} def
/s {
521 0 54 -13 472 560 setcachedevice
q
443 531 m
443 446 l
417 458 391 468 364 475 c
336 481 308 485 279 485 c
234 485 200 478 178 464 c
156 450 145 430 145 403 c
145 382 153 366 169 354 c
185 342 217 330 265 320 c
296 313 l
360 299 405 279 432 255 c
458 230 472 195 472 151 c
472 100 452 60 412 31 c
372 1 316 -13 246 -13 c
216 -13 186 -10 154 -5 c
122 0 89 8 54 20 c
54 113 l
87 95 120 82 152 74 c
184 65 216 61 248 61 c
290 61 323 68 346 82 c
368 96 380 117 380 144 c
380 168 371 187 355 200 c
339 213 303 226 247 238 c
216 245 l
160 257 119 275 95 299 c
70 323 58 356 58 399 c
58 450 76 490 112 518 c
148 546 200 560 268 560 c
301 560 332 557 362 552 c
391 547 418 540 443 531 c
f
Q
} def
/six {
636 0 70 -13 573 742 setcachedevice
q
330 404 m
286 404 251 388 225 358 c
199 328 186 286 186 234 c
186 181 199 139 225 109 c
251 79 286 64 330 64 c
374 64 409 79 435 109 c
461 139 474 181 474 234 c
474 286 461 328 435 358 c
409 388 374 404 330 404 c
526 713 m
526 623 l
501 635 476 644 451 650 c
425 656 400 659 376 659 c
310 659 260 637 226 593 c
192 549 172 482 168 394 c
187 422 211 444 240 459 c
269 474 301 482 336 482 c
409 482 467 459 509 415 c
551 371 573 310 573 234 c
573 159 550 99 506 54 c
462 9 403 -13 330 -13 c
246 -13 181 19 137 83 c
92 147 70 241 70 364 c
70 479 97 571 152 639 c
206 707 280 742 372 742 c
396 742 421 739 447 735 c
472 730 498 723 526 713 c
f
Q
} def
/two {
636 0 73 0 536 742 setcachedevice
q
192 83 m
536 83 l
536 0 l
73 0 l
73 83 l
110 121 161 173 226 239 c
290 304 331 346 348 365 c
380 400 402 430 414 455 c
426 479 433 504 433 528 c
433 566 419 598 392 622 c
365 646 330 659 286 659 c
255 659 222 653 188 643 c
154 632 117 616 78 594 c
78 694 l
118 710 155 722 189 730 c
223 738 255 742 284 742 c
359 742 419 723 464 685 c
509 647 532 597 532 534 c
532 504 526 475 515 449 c
504 422 484 390 454 354 c
446 344 420 317 376 272 c
332 227 271 164 192 83 c
f
Q
} def
/o {
612 0 55 -13 557 560 setcachedevice
q
306 484 m
258 484 220 465 192 427 c
164 389 150 338 150 273 c
150 207 163 156 191 118 c
219 80 257 62 306 62 c
354 62 392 80 420 118 c
448 156 462 207 462 273 c
462 337 448 389 420 427 c
392 465 354 484 306 484 c
306 560 m
384 560 445 534 490 484 c
534 433 557 363 557 273 c
557 183 534 113 490 63 c
445 12 384 -13 306 -13 c
227 -13 165 12 121 63 c
77 113 55 183 55 273 c
55 363 77 433 121 484 c
165 534 227 560 306 560 c
f
Q
} def
/n {
634 0 91 0 549 560 setcachedevice
q
549 330 m
549 0 l
459 0 l
459 327 l
459 379 448 417 428 443 c
408 469 378 482 338 482 c
289 482 251 466 223 435 c
195 404 181 362 181 309 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
202 494 227 519 257 535 c
286 551 320 560 358 560 c
420 560 468 540 500 501 c
532 462 549 405 549 330 c
f
Q
} def
/four {
636 0 49 0 580 729 setcachedevice
q
378 643 m
129 254 l
378 254 l
378 643 l
352 729 m
476 729 l
476 254 l
580 254 l
580 172 l
476 172 l
476 0 l
378 0 l
378 172 l
49 172 l
49 267 l
352 729 l
f
Q
} def
/zero {
636 0 66 -13 570 742 setcachedevice
q
318 664 m
267 664 229 639 203 589 c
177 539 165 464 165 364 c
165 264 177 189 203 139 c
229 89 267 64 318 64 c
369 64 407 89 433 139 c
458 189 471 264 471 364 c
471 464 458 539 433 589 c
407 639 369 664 318 664 c
318 742 m
399 742 461 709 505 645 c
548 580 570 486 570 364 c
570 241 548 147 505 83 c
461 19 399 -13 318 -13 c
236 -13 173 19 130 83 c
87 147 66 241 66 364 c
66 486 87 580 130 645 c
173 709 236 742 318 742 c
f
Q
} def
/r {
411 0 91 0 411 560 setcachedevice
q
411 463 m
401 469 390 473 378 476 c
366 478 353 480 339 480 c
288 480 249 463 222 430 c
194 397 181 350 181 288 c
181 0 l
91 0 l
91 547 l
181 547 l
181 462 l
199 495 224 520 254 536 c
284 552 321 560 365 560 c
371 560 378 559 386 559 c
393 558 401 557 411 555 c
411 463 l
f
Q
} def
/u {
634 0 85 -13 543 547 setcachedevice
q
85 216 m
85 547 l
175 547 l
175 219 l
175 167 185 129 205 103 c
225 77 255 64 296 64 c
344 64 383 79 411 110 c
439 141 453 183 453 237 c
453 547 l
543 547 l
543 0 l
453 0 l
453 84 l
431 50 405 26 377 10 c
348 -5 315 -13 277 -13 c
214 -13 166 6 134 45 c
101 83 85 140 85 216 c
f
Q
} def
/t {
392 0 27 0 368 702 setcachedevice
q
183 702 m
183 547 l
368 547 l
368 477 l
183 477 l
183 180 l
183 135 189 106 201 94 c
213 81 238 75 276 75 c
368 75 l
368 0 l
276 0 l
206 0 158 13 132 39 c
106 65 93 112 93 180 c
93 477 l
27 477 l
27 547 l
93 547 l
93 702 l
183 702 l
f
Q
} def
/eight {
636 0 68 -13 568 742 setcachedevice
q
318 346 m
271 346 234 333 207 308 c
180 283 167 249 167 205 c
167 161 180 126 207 101 c
234 76 271 64 318 64 c
364 64 401 76 428 102 c
455 127 469 161 469 205 c
469 249 455 283 429 308 c
402 333 365 346 318 346 c
219 388 m
177 398 144 418 120 447 c
96 476 85 511 85 553 c
85 611 105 657 147 691 c
188 725 245 742 318 742 c
390 742 447 725 489 691 c
530 657 551 611 551 553 c
551 511 539 476 515 447 c
491 418 459 398 417 388 c
464 377 501 355 528 323 c
554 291 568 251 568 205 c
568 134 546 80 503 43 c
459 5 398 -13 318 -13 c
237 -13 175 5 132 43 c
89 80 68 134 68 205 c
68 251 81 291 108 323 c
134 355 171 377 219 388 c
183 544 m
183 506 194 476 218 455 c
242 434 275 424 318 424 c
360 424 393 434 417 455 c
441 476 453 506 453 544 c
453 582 441 611 417 632 c
393 653 360 664 318 664 c
275 664 242 653 218 632 c
194 611 183 582 183 544 c
f
Q
} def
/R {
695 0 98 0 666 729 setcachedevice
q
444 342 m
465 334 486 319 506 296 c
526 272 546 240 566 199 c
666 0 l
560 0 l
467 187 l
443 235 419 268 397 284 c
374 300 343 308 304 308 c
197 308 l
197 0 l
98 0 l
98 729 l
321 729 l
404 729 466 711 507 677 c
548 642 569 589 569 519 c
569 473 558 434 537 404 c
515 374 484 353 444 342 c
197 648 m
197 389 l
321 389 l
368 389 404 400 428 422 c
452 444 465 476 465 519 c
465 561 452 593 428 615 c
404 637 368 648 321 648 c
197 648 l
f
Q
} def
/one {
636 0 110 0 544 729 setcachedevice
q
124 83 m
285 83 l
285 639 l
110 604 l
110 694 l
284 729 l
383 729 l
383 83 l
544 83 l
544 0 l
124 0 l
124 83 l
f
Q
} def
/T {
611 0 -2 0 614 729 setcachedevice
q
-2 729 m
614 729 l
614 646 l
355 646 l
355 0 l
256 0 l
256 646 l
-2 646 l
-2 729 l
f
Q
} def
end
currentdict end
/T3_14_0 exch definefont pop
%%EndResource
/F14_0 /T3_14_0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
1 j
2 J
/DeviceGray {} cs
[1] sc
0 w
/DeviceGray {} CS
[1] SC
0 0 432 288 re
f
/DeviceGray {} CS
[0] SC
54 36 334.8 223.2 re
f
q
54 36 334.8 223.2 re
W
1 w
/DeviceRGB {} CS
[0 0 1] SC
114.543 36 m
114.543 42.696 l
125.27055 42.696 l
125.27055 51.624 l
135.9981 51.624 l
135.9981 53.856 l
146.72565 53.856 l
146.72565 58.32 l
157.4532 58.32 l
157.4532 94.032 l
168.18075 94.032 l
168.18075 91.8 l
178.9083 91.8 l
178.9083 102.96 l
189.63585 102.96 l
189.63585 73.944 l
200.3634 73.944 l
200.3634 49.392 l
211.09095 49.392 l
211.09095 36 l
221.8185 36 l
221.8185 36 l
232.54605 36 l
232.54605 47.16 l
243.2736 47.16 l
243.2736 125.28 l
254.00115 125.28 l
254.00115 120.816 l
264.7287 120.816 l
264.7287 111.888 l
275.45625 111.888 l
275.45625 89.568 l
286.1838 89.568 l
286.1838 56.088 l
296.91135 56.088 l
296.91135 51.624 l
307.6389 51.624 l
307.6389 49.392 l
318.36645 49.392 l
318.36645 42.696 l
329.094 42.696 l
329.094 36 l
318.36645 36 l
318.36645 36 l
307.6389 36 l
307.6389 36 l
296.91135 36 l
296.91135 36 l
286.1838 36 l
286.1838 36 l
275.45625 36 l
275.45625 36 l
264.7287 36 l
264.7287 36 l
254.00115 36 l
254.00115 36 l
243.2736 36 l
243.2736 36 l
232.54605 36 l
232.54605 36 l
221.8185 36 l
221.8185 36 l
211.09095 36 l
211.09095 36 l
200.3634 36 l
200.3634 36 l
189.63585 36 l
189.63585 36 l
178.9083 36 l
178.9083 36 l
168.18075 36 l
168.18075 36 l
157.4532 36 l
157.4532 36 l
146.72565 36 l
146.72565 36 l
135.9981 36 l
135.9981 36 l
125.27055 36 l
125.27055 36 l
S
Q
q
54 36 334.8 223.2 re
W
1 w
/DeviceRGB {} CS
[0 0.5 0] SC
130.725 36 m
130.725 44.928 l
139.8762 44.928 l
139.8762 38.232 l
149.0274 38.232 l
149.0274 44.928 l
158.1786 44.928 l
158.1786 60.552 l
167.3298 60.552 l
167.3298 56.088 l
176.481 56.088 l
176.481 60.552 l
185.6322 60.552 l
185.6322 58.32 l
194.7834 58.32 l
194.7834 60.552 l
203.9346 60.552 l
203.9346 40.464 l
213.0858 40.464 l
213.0858 36 l
222.237 36 l
222.237 36 l
231.3882 36 l
231.3882 96.264 l
240.5394 96.264 l
240.5394 169.92 l
249.6906 169.92 l
249.6906 158.76 l
258.8418 158.76 l
258.8418 134.208 l
267.993 134.208 l
267.993 71.712 l
277.1442 71.712 l
277.1442 62.784 l
286.2954 62.784 l
286.2954 60.552 l
295.4466 60.552 l
295.4466 44.928 l
304.5978 44.928 l
304.5978 49.392 l
313.749 49.392 l
313.749 36 l
304.5978 36 l
304.5978 36 l
295.4466 36 l
295.4466 36 l
286.2954 36 l
286.2954 36 l
277.1442 36 l
277.1442 36 l
267.993 36 l
267.993 36 l
258.8418 36 l
258.8418 36 l
249.6906 36 l
249.6906 36 l
240.5394 36 l
240.5394 36 l
231.3882 36 l
231.3882 36 l
222.237 36 l
222.237 36 l
213.0858 36 l
213.0858 36 l
203.9346 36 l
203.9346 36 l
194.7834 36 l
194.7834 36 l
185.6322 36 l
185.6322 36 l
176.481 36 l
176.481 36 l
167.3298 36 l
167.3298 36 l
158.1786 36 l
158.1786 36 l
149.0274 36 l
149.0274 36 l
139.8762 36 l
139.8762 36 l
S
Q
q
54 36 334.8 223.2 re
W
1 w
/DeviceRGB {} CS
[1 0 0] SC
158.067 36 m
158.067 38.232 l
164.1771 38.232 l
164.1771 47.16 l
170.2872 47.16 l
170.2872 51.624 l
176.3973 51.624 l
176.3973 49.392 l
182.5074 49.392 l
182.5074 67.248 l
188.6175 67.248 l
188.6175 82.872 l
194.7276 82.872 l
194.7276 80.64 l
200.8377 80.64 l
200.8377 67.248 l
206.9478 67.248 l
206.9478 38.232 l
213.0579 38.232 l
213.0579 36 l
219.168 36 l
219.168 36 l
225.2781 36 l
225.2781 36 l
231.3882 36 l
231.3882 51.624 l
237.4983 51.624 l
237.4983 149.832 l
243.6084 149.832 l
243.6084 178.848 l
249.7185 178.848 l
249.7185 120.816 l
255.8286 120.816 l
255.8286 78.408 l
261.9387 78.408 l
261.9387 62.784 l
268.0488 62.784 l
268.0488 56.088 l
274.1589 56.088 l
274.1589 44.928 l
280.269 44.928 l
280.269 36 l
274.1589 36 l
274.1589 36 l
268.0488 36 l
268.0488 36 l
261.9387 36 l
261.9387 36 l
255.8286 36 l
255.8286 36 l
249.7185 36 l
249.7185 36 l
243.6084 36 l
243.6084 36 l
237.4983 36 l
237.4983 36 l
231.3882 36 l
231.3882 36 l
225.2781 36 l
225.2781 36 l
219.168 36 l
219.168 36 l
213.0579 36 l
213.0579 36 l
206.9478 36 l
206.9478 36 l
200.8377 36 l
200.8377 36 l
194.7276 36 l
194.7276 36 l
188.6175 36 l
188.6175 36 l
182.5074 36 l
182.5074 36 l
176.3973 36 l
176.3973 36 l
170.2872 36 l
170.2872 36 l
164.1771 36 l
164.1771 36 l
S
Q
q
54 36 334.8 223.2 re
W
1 w
/DeviceRGB {} CS
[0 0.75 0.75] SC
117.612 36 m
117.612 44.928 l
127.935 44.928 l
127.935 40.464 l
138.258 40.464 l
138.258 56.088 l
148.581 56.088 l
148.581 67.248 l
158.904 67.248 l
158.904 71.712 l
169.227 71.712 l
169.227 78.408 l
179.55 78.408 l
179.55 73.944 l
189.873 73.944 l
189.873 94.032 l
200.196 94.032 l
200.196 42.696 l
210.519 42.696 l
210.519 36 l
220.842 36 l
220.842 36 l
231.165 36 l
231.165 42.696 l
241.488 42.696 l
241.488 111.888 l
251.811 111.888 l
251.811 114.12 l
262.134 114.12 l
262.134 105.192 l
272.457 105.192 l
272.457 65.016 l
282.78 65.016 l
282.78 60.552 l
293.103 60.552 l
293.103 56.088 l
303.426 56.088 l
303.426 47.16 l
313.749 47.16 l
313.749 44.928 l
324.072 44.928 l
324.072 36 l
313.749 36 l
313.749 36 l
303.426 36 l
303.426 36 l
293.103 36 l
293.103 36 l
282.78 36 l
282.78 36 l
272.457 36 l
272.457 36 l
262.134 36 l
262.134 36 l
251.811 36 l
251.811 36 l
241.488 36 l
241.488 36 l
231.165 36 l
231.165 36 l
220.842 36 l
220.842 36 l
210.519 36 l
210.519 36 l
200.196 36 l
200.196 36 l
189.873 36 l
189.873 36 l
179.55 36 l
179.55 36 l
169.227 36 l
169.227 36 l
158.904 36 l
158.904 36 l
148.581 36 l
148.581 36 l
138.258 36 l
138.258 36 l
127.935 36 l
127.935 36 l
S
Q
q
54 36 334.8 223.2 re
W
1 w
/DeviceRGB {} CS
[0.75 0 0.75] SC
161.136 36 m
161.136 38.232 l
167.23215 38.232 l
167.23215 38.232 l
173.3283 38.232 l
173.3283 40.464 l
179.42445 40.464 l
179.42445 42.696 l
185.5206 42.696 l
185.5206 42.696 l
191.61675 42.696 l
191.61675 60.552 l
197.7129 60.552 l
197.7129 69.48 l
203.80905 69.48 l
203.80905 76.176 l
209.9052 76.176 l
209.9052 38.232 l
216.00135 38.232 l
216.00135 36 l
222.0975 36 l
222.0975 36 l
228.19365 36 l
228.19365 60.552 l
234.2898 60.552 l
234.2898 239.112 l
240.38595 239.112 l
240.38595 174.384 l
246.4821 174.384 l
246.4821 94.032 l
252.57825 94.032 l
252.57825 78.408 l
258.6744 78.408 l
258.6744 47.16 l
264.77055 47.16 l
264.77055 56.088 l
270.8667 56.088 l
270.8667 44.928 l
276.96285 44.928 l
276.96285 38.232 l
283.059 38.232 l
283.059 36 l
276.96285 36 l
276.96285 36 l
270.8667 36 l
270.8667 36 l
264.77055 36 l
264.77055 36 l
258.6744 36 l
258.6744 36 l
252.57825 36 l
252.57825 36 l
246.4821 36 l
246.4821 36 l
240.38595 36 l
240.38595 36 l
234.2898 36 l
234.2898 36 l
228.19365 36 l
228.19365 36 l
222.0975 36 l
222.0975 36 l
216.00135 36 l
216.00135 36 l
209.9052 36 l
209.9052 36 l
203.80905 36 l
203.80905 36 l
197.7129 36 l
197.7129 36 l
191.61675 36 l
191.61675 36 l
185.5206 36 l
185.5206 36 l
179.42445 36 l
179.42445 36 l
173.3283 36 l
173.3283 36 l
167.23215 36 l
167.23215 36 l
S
Q
q
54 36 334.8 223.2 re
W
1 w
/DeviceRGB {} CS
[0.75 0.75 0] SC
157.509 36 m
157.509 40.464 l
164.21895 40.464 l
164.21895 49.392 l
170.9289 49.392 l
170.9289 56.088 l
177.63885 56.088 l
177.63885 47.16 l
184.3488 47.16 l
184.3488 73.944 l
191.05875 73.944 l
191.05875 71.712 l
197.7687 71.712 l
197.7687 82.872 l
204.47865 82.872 l
204.47865 71.712 l
211.1886 71.712 l
211.1886 36 l
217.89855 36 l
217.89855 36 l
224.6085 36 l
224.6085 36 l
231.31845 36 l
231.31845 82.872 l
238.0284 82.872 l
238.0284 143.136 l
244.73835 143.136 l
244.73835 152.064 l
251.4483 152.064 l
251.4483 105.192 l
258.15825 105.192 l
258.15825 100.728 l
264.8682 100.728 l
264.8682 69.48 l
271.57815 69.48 l
271.57815 47.16 l
278.2881 47.16 l
278.2881 49.392 l
284.99805 49.392 l
284.99805 44.928 l
291.708 44.928 l
291.708 36 l
284.99805 36 l
284.99805 36 l
278.2881 36 l
278.2881 36 l
271.57815 36 l
271.57815 36 l
264.8682 36 l
264.8682 36 l
258.15825 36 l
258.15825 36 l
251.4483 36 l
251.4483 36 l
244.73835 36 l
244.73835 36 l
238.0284 36 l
238.0284 36 l
231.31845 36 l
231.31845 36 l
224.6085 36 l
224.6085 36 l
217.89855 36 l
217.89855 36 l
211.1886 36 l
211.1886 36 l
204.47865 36 l
204.47865 36 l
197.7687 36 l
197.7687 36 l
191.05875 36 l
191.05875 36 l
184.3488 36 l
184.3488 36 l
177.63885 36 l
177.63885 36 l
170.9289 36 l
170.9289 36 l
164.21895 36 l
164.21895 36 l
S
Q
q
54 36 334.8 223.2 re
W
1 w
/DeviceGray {} CS
[0] SC
152.208 36 m
152.208 44.928 l
159.2109 44.928 l
159.2109 42.696 l
166.2138 42.696 l
166.2138 47.16 l
173.2167 47.16 l
173.2167 47.16 l
180.2196 47.16 l
180.2196 56.088 l
187.2225 56.088 l
187.2225 71.712 l
194.2254 71.712 l
194.2254 89.568 l
201.2283 89.568 l
201.2283 111.888 l
208.2312 111.888 l
208.2312 36 l
215.2341 36 l
215.2341 36 l
222.237 36 l
222.237 36 l
229.2399 36 l
229.2399 40.464 l
236.2428 40.464 l
236.2428 192.24 l
243.2457 192.24 l
243.2457 149.832 l
250.2486 149.832 l
250.2486 96.264 l
257.2515 96.264 l
257.2515 87.336 l
264.2544 87.336 l
264.2544 62.784 l
271.2573 62.784 l
271.2573 58.32 l
278.2602 58.32 l
278.2602 38.232 l
285.2631 38.232 l
285.2631 42.696 l
292.266 42.696 l
292.266 36 l
285.2631 36 l
285.2631 36 l
278.2602 36 l
278.2602 36 l
271.2573 36 l
271.2573 36 l
264.2544 36 l
264.2544 36 l
257.2515 36 l
257.2515 36 l
250.2486 36 l
250.2486 36 l
243.2457 36 l
243.2457 36 l
236.2428 36 l
236.2428 36 l
229.2399 36 l
229.2399 36 l
222.237 36 l
222.237 36 l
215.2341 36 l
215.2341 36 l
208.2312 36 l
208.2312 36 l
201.2283 36 l
201.2283 36 l
194.2254 36 l
194.2254 36 l
187.2225 36 l
187.2225 36 l
180.2196 36 l
180.2196 36 l
173.2167 36 l
173.2167 36 l
166.2138 36 l
166.2138 36 l
159.2109 36 l
159.2109 36 l
S
Q
q
54 36 334.8 223.2 re
W
1 w
/DeviceRGB {} CS
[0 0 1] SC
134.073 36 m
134.073 42.696 l
142.95915 42.696 l
142.95915 38.232 l
151.8453 38.232 l
151.8453 47.16 l
160.73145 47.16 l
160.73145 65.016 l
169.6176 65.016 l
169.6176 89.568 l
178.50375 89.568 l
178.50375 116.352 l
187.3899 116.352 l
187.3899 134.208 l
196.27605 134.208 l
196.27605 80.64 l
205.1622 80.64 l
205.1622 36 l
214.04835 36 l
214.04835 36 l
222.9345 36 l
222.9345 36 l
231.82065 36 l
231.82065 40.464 l
240.7068 40.464 l
240.7068 118.584 l
249.59295 118.584 l
249.59295 136.44 l
258.4791 136.44 l
258.4791 96.264 l
267.36525 96.264 l
267.36525 69.48 l
276.2514 69.48 l
276.2514 56.088 l
285.13755 56.088 l
285.13755 51.624 l
294.0237 51.624 l
294.0237 47.16 l
302.90985 47.16 l
302.90985 38.232 l
311.796 38.232 l
311.796 36 l
302.90985 36 l
302.90985 36 l
294.0237 36 l
294.0237 36 l
285.13755 36 l
285.13755 36 l
276.2514 36 l
276.2514 36 l
267.36525 36 l
267.36525 36 l
258.4791 36 l
258.4791 36 l
249.59295 36 l
249.59295 36 l
240.7068 36 l
240.7068 36 l
231.82065 36 l
231.82065 36 l
222.9345 36 l
222.9345 36 l
214.04835 36 l
214.04835 36 l
205.1622 36 l
205.1622 36 l
196.27605 36 l
196.27605 36 l
187.3899 36 l
187.3899 36 l
178.50375 36 l
178.50375 36 l
169.6176 36 l
169.6176 36 l
160.73145 36 l
160.73145 36 l
151.8453 36 l
151.8453 36 l
142.95915 36 l
142.95915 36 l
S
Q
q
54 36 334.8 223.2 re
W
1 w
/DeviceRGB {} CS
[0 0.5 0] SC
139.932 36 m
139.932 53.856 l
149.0832 53.856 l
149.0832 49.392 l
158.2344 49.392 l
158.2344 65.016 l
167.3856 65.016 l
167.3856 58.32 l
176.5368 58.32 l
176.5368 76.176 l
185.688 76.176 l
185.688 73.944 l
194.8392 73.944 l
194.8392 53.856 l
203.9904 53.856 l
203.9904 36 l
213.1416 36 l
213.1416 36 l
222.2928 36 l
222.2928 36 l
231.444 36 l
231.444 49.392 l
240.5952 49.392 l
240.5952 136.44 l
249.7464 136.44 l
249.7464 147.6 l
258.8976 147.6 l
258.8976 136.44 l
268.0488 136.44 l
268.0488 105.192 l
277.2 105.192 l
277.2 51.624 l
286.3512 51.624 l
286.3512 53.856 l
295.5024 53.856 l
295.5024 73.944 l
304.6536 73.944 l
304.6536 38.232 l
313.8048 38.232 l
313.8048 42.696 l
322.956 42.696 l
322.956 36 l
313.8048 36 l
313.8048 36 l
304.6536 36 l
304.6536 36 l
295.5024 36 l
295.5024 36 l
286.3512 36 l
286.3512 36 l
277.2 36 l
277.2 36 l
268.0488 36 l
268.0488 36 l
258.8976 36 l
258.8976 36 l
249.7464 36 l
249.7464 36 l
240.5952 36 l
240.5952 36 l
231.444 36 l
231.444 36 l
222.2928 36 l
222.2928 36 l
213.1416 36 l
213.1416 36 l
203.9904 36 l
203.9904 36 l
194.8392 36 l
194.8392 36 l
185.688 36 l
185.688 36 l
176.5368 36 l
176.5368 36 l
167.3856 36 l
167.3856 36 l
158.2344 36 l
158.2344 36 l
149.0832 36 l
149.0832 36 l
S
Q
q
54 36 334.8 223.2 re
W
1 w
/DeviceRGB {} CS
[1 0 0] SC
124.308 36 m
124.308 42.696 l
133.64055 42.696 l
133.64055 49.392 l
142.9731 49.392 l
142.9731 47.16 l
152.30565 47.16 l
152.30565 47.16 l
161.6382 47.16 l
161.6382 53.856 l
170.97075 53.856 l
170.97075 53.856 l
180.3033 53.856 l
180.3033 60.552 l
189.63585 60.552 l
189.63585 91.8 l
198.9684 91.8 l
198.9684 69.48 l
208.30095 69.48 l
208.30095 36 l
217.6335 36 l
217.6335 36 l
226.96605 36 l
226.96605 49.392 l
236.2986 49.392 l
236.2986 82.872 l
245.63115 82.872 l
245.63115 85.104 l
254.9637 85.104 l
254.9637 100.728 l
264.29625 100.728 l
264.29625 87.336 l
273.6288 87.336 l
273.6288 67.248 l
282.96135 67.248 l
282.96135 53.856 l
292.2939 53.856 l
292.2939 47.16 l
301.62645 47.16 l
301.62645 42.696 l
310.959 42.696 l
310.959 36 l
301.62645 36 l
301.62645 36 l
292.2939 36 l
292.2939 36 l
282.96135 36 l
282.96135 36 l
273.6288 36 l
273.6288 36 l
264.29625 36 l
264.29625 36 l
254.9637 36 l
254.9637 36 l
245.63115 36 l
245.63115 36 l
236.2986 36 l
236.2986 36 l
226.96605 36 l
226.96605 36 l
217.6335 36 l
217.6335 36 l
208.30095 36 l
208.30095 36 l
198.9684 36 l
198.9684 36 l
189.63585 36 l
189.63585 36 l
180.3033 36 l
180.3033 36 l
170.97075 36 l
170.97075 36 l
161.6382 36 l
161.6382 36 l
152.30565 36 l
152.30565 36 l
142.9731 36 l
142.9731 36 l
133.64055 36 l
133.64055 36 l
S
Q
q
54 36 334.8 223.2 re
W
1 w
/DeviceRGB {} CS
[0 0.75 0.75] SC
124.866 36 m
124.866 44.928 l
134.70075 44.928 l
134.70075 40.464 l
144.5355 40.464 l
144.5355 44.928 l
154.37025 44.928 l
154.37025 67.248 l
164.205 67.248 l
164.205 65.016 l
174.03975 65.016 l
174.03975 80.64 l
183.8745 80.64 l
183.8745 73.944 l
193.70925 73.944 l
193.70925 42.696 l
203.544 42.696 l
203.544 36 l
213.37875 36 l
213.37875 36 l
223.2135 36 l
223.2135 36 l
233.04825 36 l
233.04825 44.928 l
242.883 44.928 l
242.883 167.688 l
252.71775 167.688 l
252.71775 178.848 l
262.5525 178.848 l
262.5525 123.048 l
272.38725 123.048 l
272.38725 105.192 l
282.222 105.192 l
282.222 73.944 l
292.05675 73.944 l
292.05675 58.32 l
301.8915 58.32 l
301.8915 49.392 l
311.72625 49.392 l
311.72625 40.464 l
321.561 40.464 l
321.561 36 l
311.72625 36 l
311.72625 36 l
301.8915 36 l
301.8915 36 l
292.05675 36 l
292.05675 36 l
282.222 36 l
282.222 36 l
272.38725 36 l
272.38725 36 l
262.5525 36 l
262.5525 36 l
252.71775 36 l
252.71775 36 l
242.883 36 l
242.883 36 l
233.04825 36 l
233.04825 36 l
223.2135 36 l
223.2135 36 l
213.37875 36 l
213.37875 36 l
203.544 36 l
203.544 36 l
193.70925 36 l
193.70925 36 l
183.8745 36 l
183.8745 36 l
174.03975 36 l
174.03975 36 l
164.205 36 l
164.205 36 l
154.37025 36 l
154.37025 36 l
144.5355 36 l
144.5355 36 l
134.70075 36 l
134.70075 36 l
S
Q
q
54 36 334.8 223.2 re
W
1 w
/DeviceRGB {} CS
[0.75 0 0.75] SC
115.101 36 m
115.101 40.464 l
125.6751 40.464 l
125.6751 40.464 l
136.2492 40.464 l
136.2492 49.392 l
146.8233 49.392 l
146.8233 69.48 l
157.3974 69.48 l
157.3974 62.784 l
167.9715 62.784 l
167.9715 60.552 l
178.5456 60.552 l
178.5456 49.392 l
189.1197 49.392 l
189.1197 53.856 l
199.6938 53.856 l
199.6938 38.232 l
210.2679 38.232 l
210.2679 36 l
220.842 36 l
220.842 36 l
231.4161 36 l
231.4161 47.16 l
241.9902 47.16 l
241.9902 120.816 l
252.5643 120.816 l
252.5643 147.6 l
263.1384 147.6 l
263.1384 143.136 l
273.7125 143.136 l
273.7125 100.728 l
284.2866 100.728 l
284.2866 123.048 l
294.8607 123.048 l
294.8607 82.872 l
305.4348 82.872 l
305.4348 53.856 l
316.0089 53.856 l
316.0089 44.928 l
326.583 44.928 l
326.583 36 l
316.0089 36 l
316.0089 36 l
305.4348 36 l
305.4348 36 l
294.8607 36 l
294.8607 36 l
284.2866 36 l
284.2866 36 l
273.7125 36 l
273.7125 36 l
263.1384 36 l
263.1384 36 l
252.5643 36 l
252.5643 36 l
241.9902 36 l
241.9902 36 l
231.4161 36 l
231.4161 36 l
220.842 36 l
220.842 36 l
210.2679 36 l
210.2679 36 l
199.6938 36 l
199.6938 36 l
189.1197 36 l
189.1197 36 l
178.5456 36 l
178.5456 36 l
167.9715 36 l
167.9715 36 l
157.3974 36 l
157.3974 36 l
146.8233 36 l
146.8233 36 l
136.2492 36 l
136.2492 36 l
125.6751 36 l
125.6751 36 l
S
Q
q
54 36 334.8 223.2 re
W
1 w
/DeviceRGB {} CS
[0.75 0.75 0] SC
136.863 36 m
136.863 38.232 l
145.41435 38.232 l
145.41435 38.232 l
153.9657 38.232 l
153.9657 38.232 l
162.51705 38.232 l
162.51705 44.928 l
171.0684 44.928 l
171.0684 58.32 l
179.61975 58.32 l
179.61975 65.016 l
188.1711 65.016 l
188.1711 82.872 l
196.72245 82.872 l
196.72245 65.016 l
205.2738 65.016 l
205.2738 42.696 l
213.82515 42.696 l
213.82515 36 l
222.3765 36 l
222.3765 36 l
230.92785 36 l
230.92785 76.176 l
239.4792 76.176 l
239.4792 174.384 l
248.03055 174.384 l
248.03055 147.6 l
256.5819 147.6 l
256.5819 114.12 l
265.13325 114.12 l
265.13325 69.48 l
273.6846 69.48 l
273.6846 60.552 l
282.23595 60.552 l
282.23595 51.624 l
290.7873 51.624 l
290.7873 38.232 l
299.33865 38.232 l
299.33865 38.232 l
307.89 38.232 l
307.89 36 l
299.33865 36 l
299.33865 36 l
290.7873 36 l
290.7873 36 l
282.23595 36 l
282.23595 36 l
273.6846 36 l
273.6846 36 l
265.13325 36 l
265.13325 36 l
256.5819 36 l
256.5819 36 l
248.03055 36 l
248.03055 36 l
239.4792 36 l
239.4792 36 l
230.92785 36 l
230.92785 36 l
222.3765 36 l
222.3765 36 l
213.82515 36 l
213.82515 36 l
205.2738 36 l
205.2738 36 l
196.72245 36 l
196.72245 36 l
188.1711 36 l
188.1711 36 l
179.61975 36 l
179.61975 36 l
171.0684 36 l
171.0684 36 l
162.51705 36 l
162.51705 36 l
153.9657 36 l
153.9657 36 l
145.41435 36 l
145.41435 36 l
S
Q
q
54 36 334.8 223.2 re
W
1 w
/DeviceGray {} CS
[0] SC
95.013 36 m
95.013 42.696 l
108.08415 42.696 l
108.08415 47.16 l
121.1553 47.16 l
121.1553 47.16 l
134.22645 47.16 l
134.22645 58.32 l
147.2976 58.32 l
147.2976 67.248 l
160.36875 67.248 l
160.36875 69.48 l
173.4399 69.48 l
173.4399 87.336 l
186.51105 87.336 l
186.51105 96.264 l
199.5822 96.264 l
199.5822 47.16 l
212.65335 47.16 l
212.65335 36 l
225.7245 36 l
225.7245 38.232 l
238.79565 38.232 l
238.79565 125.28 l
251.8668 125.28 l
251.8668 131.976 l
264.93795 131.976 l
264.93795 114.12 l
278.0091 114.12 l
278.0091 82.872 l
291.08025 82.872 l
291.08025 51.624 l
304.1514 51.624 l
304.1514 51.624 l
317.22255 51.624 l
317.22255 47.16 l
330.2937 47.16 l
330.2937 42.696 l
343.36485 42.696 l
343.36485 47.16 l
356.436 47.16 l
356.436 36 l
343.36485 36 l
343.36485 36 l
330.2937 36 l
330.2937 36 l
317.22255 36 l
317.22255 36 l
304.1514 36 l
304.1514 36 l
291.08025 36 l
291.08025 36 l
278.0091 36 l
278.0091 36 l
264.93795 36 l
264.93795 36 l
251.8668 36 l
251.8668 36 l
238.79565 36 l
238.79565 36 l
225.7245 36 l
225.7245 36 l
212.65335 36 l
212.65335 36 l
199.5822 36 l
199.5822 36 l
186.51105 36 l
186.51105 36 l
173.4399 36 l
173.4399 36 l
160.36875 36 l
160.36875 36 l
147.2976 36 l
147.2976 36 l
134.22645 36 l
134.22645 36 l
121.1553 36 l
121.1553 36 l
108.08415 36 l
108.08415 36 l
S
Q
0 J
/DeviceGray {} cs
[0] sc
0.5 w
/DeviceGray {} CS
[0] SC
54 36 m
54 40 l
f
54 36 m
54 40 l
S
54 259.2 m
54 255.2 l
f
54 259.2 m
54 255.2 l
S
/DeviceGray {} cs
[0] sc
1 w
q
[1 0 0 1 47.476563 24.4375] cm
[1 0 0 1 0 0] Tm
0 0 Td
8.378906 0.140625 Td
/F14_0 10 Tf
(6)
[6.36
0] Tj
q
[0.01 0 0 0.01 0 0] cm
q
[1 0 0 1 0 0] cm
-184 -236 1472 1165 re
W
106 272 626 83 re
f
Q
Q
Q
/DeviceGray {} cs
[0] sc
0.5 w
109.8 36 m
109.8 40 l
f
109.8 36 m
109.8 40 l
S
109.8 259.2 m
109.8 255.2 l
f
109.8 259.2 m
109.8 255.2 l
S
/DeviceGray {} cs
[0] sc
1 w
q
[1 0 0 1 103.245313 24.703125] cm
[1 0 0 1 0 0] Tm
0 0 Td
8.378906 0 Td
/F14_0 10 Tf
(4)
[6.36
0] Tj
q
[0.01 0 0 0.01 0 0] cm
q
[1 0 0 1 0 0] cm
-184 -236 1472 1165 re
W
106 272 626 83 re
f
Q
Q
Q
/DeviceGray {} cs
[0] sc
0.5 w
165.6 36 m
165.6 40 l
f
165.6 36 m
165.6 40 l
S
165.6 259.2 m
165.6 255.2 l
f
165.6 259.2 m
165.6 255.2 l
S
/DeviceGray {} cs
[0] sc
1 w
q
[1 0 0 1 159.264062 24.578125] cm
[1 0 0 1 0 0] Tm
0 0 Td
8.378906 0 Td
/F14_0 10 Tf
(2)
[6.36
0] Tj
q
[0.01 0 0 0.01 0 0] cm
q
[1 0 0 1 0 0] cm
-184 -236 1472 1165 re
W
106 272 626 83 re
f
Q
Q
Q
/DeviceGray {} cs
[0] sc
0.5 w
221.4 36 m
221.4 40 l
f
221.4 36 m
221.4 40 l
S
221.4 259.2 m
221.4 255.2 l
f
221.4 259.2 m
221.4 255.2 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
218.876562 24.578125 Td
/F14_0 10 Tf
(0)
[6.36
0] Tj
/DeviceGray {} cs
[0] sc
0.5 w
277.2 36 m
277.2 40 l
f
277.2 36 m
277.2 40 l
S
277.2 259.2 m
277.2 255.2 l
f
277.2 259.2 m
277.2 255.2 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
274.8875 24.578125 Td
/F14_0 10 Tf
(2)
[6.36
0] Tj
/DeviceGray {} cs
[0] sc
0.5 w
333 36 m
333 40 l
f
333 36 m
333 40 l
S
333 259.2 m
333 255.2 l
f
333 259.2 m
333 255.2 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
330.34375 24.703125 Td
/F14_0 10 Tf
(4)
[6.36
0] Tj
/DeviceGray {} cs
[0] sc
0.5 w
388.8 36 m
388.8 40 l
f
388.8 36 m
388.8 40 l
S
388.8 259.2 m
388.8 255.2 l
f
388.8 259.2 m
388.8 255.2 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
386.284375 24.578125 Td
/F14_0 10 Tf
(6)
[6.36
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
215.720313 12.140625 Td
/F14_0 10 Tf
(RT)
[6.95
0
6.11
0] Tj
/DeviceGray {} cs
[0] sc
0.5 w
54 36 m
58 36 l
f
54 36 m
58 36 l
S
388.8 36 m
384.8 36 l
f
388.8 36 m
384.8 36 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
44.953125 32.359375 Td
/F14_0 10 Tf
(0)
[6.36
0] Tj
/DeviceGray {} cs
[0] sc
0.5 w
54 80.64 m
58 80.64 l
f
54 80.64 m
58 80.64 l
S
388.8 80.64 m
384.8 80.64 l
f
388.8 80.64 m
384.8 80.64 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
38.671875 76.999375 Td
/F14_0 10 Tf
(20)
[6.36
0
6.36
0] Tj
/DeviceGray {} cs
[0] sc
0.5 w
54 125.28 m
58 125.28 l
f
54 125.28 m
58 125.28 l
S
388.8 125.28 m
384.8 125.28 l
f
388.8 125.28 m
384.8 125.28 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
38.421875 121.639375 Td
/F14_0 10 Tf
(40)
[6.36
0
6.36
0] Tj
/DeviceGray {} cs
[0] sc
0.5 w
54 169.92 m
58 169.92 l
f
54 169.92 m
58 169.92 l
S
388.8 169.92 m
384.8 169.92 l
f
388.8 169.92 m
384.8 169.92 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
38.640625 166.279375 Td
/F14_0 10 Tf
(60)
[6.36
0
6.36
0] Tj
/DeviceGray {} cs
[0] sc
0.5 w
54 214.56 m
58 214.56 l
f
54 214.56 m
58 214.56 l
S
388.8 214.56 m
384.8 214.56 l
f
388.8 214.56 m
384.8 214.56 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
38.625 210.919375 Td
/F14_0 10 Tf
(80)
[6.36
0
6.36
0] Tj
/DeviceGray {} cs
[0] sc
0.5 w
54 259.2 m
58 259.2 l
f
54 259.2 m
58 259.2 l
S
388.8 259.2 m
384.8 259.2 l
f
388.8 259.2 m
384.8 259.2 l
S
/DeviceGray {} cs
[0] sc
1 w
[1 0 0 1 0 0] Tm
0 0 Td
32.671875 255.559375 Td
/F14_0 10 Tf
(100)
[6.36
0
6.36
0
6.36
0] Tj
[1 0 0 1 0 0] Tm
0 0 Td
[0 1 -1 0 27.671875 133.873438] Tm
0 0 Td
0 0.140625 Td
/F14_0 10 Tf
(count)
[5.5
0
6.12
0
6.34
0
6.34
0
3.92
0] Tj
2 J
54 259.2 m
388.8 259.2 l
S
388.8 36 m
388.8 259.2 l
S
54 36 m
388.8 36 l
S
54 36 m
54 259.2 l
S
0 J
/DeviceGray {} cs
[0] sc
[1 0 0 1 0 0] Tm
0 0 Td
175.064062 264.2 Td
/F14_0 12 Tf
(RT distributions)
[8.34
0
7.332
0
3.816
0
7.62
0
3.336
0
6.252
0
4.704
0
4.932
0
3.336
0
7.62
0
7.608
0
4.704
0
3.336
0
7.344
0
7.608
0
6.252
0] Tj
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font T3_14_0
%%EOF
